<%
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' FileName      : Functions.Framework
// ' Function      : Holds all the repeatable functions for the framework
// ' Requirements  : None
// ' Trigger       : Misc
// ' Author        : Patrick Johnson - contact@patrickjohnson.co.uk
// ' Version       : 6.2.0
// ' Last Updated  : 21/05/2012 - P Johnson
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Replace Querystring function
// ------------------------------------------------------------------------------------------------------------------------------------------------------

  Public Function ParseCircuit( FieldName, Response )
	  
		Collection = Split( Response, Chr(13) )
		
		For i = LBound( Collection ) To UBound( Collection )
		  Item = Replace( Collection( i ), Chr(10), "" )
			If Instr( Item, FieldName & ":" ) = 1 Then
			  ParseCircuit = Right( Item, Len( Item ) - Len( FieldName ) - 1 )
		Exit For
		  End If
			Next
			
	End Function

// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Decode URL
// ------------------------------------------------------------------------------------------------------------------------------------------------------

  Public Function UrlDecode( String )
	
	  For LngPos = 1 To Len( String )
	    If Mid( String, LngPos, 1 ) = "%" Then
		    StrUrlDecode = StrUrlDecode & Chr("&H" & Mid( String, LngPos + 1, 2 ))
			  LngPos = LngPos + 2
		  ElseIf Mid( String, LngPos, 1 ) = "+" Then
		    StrUrlDecode = StrUrlDecode & " "
		  Else
		    StrUrlDecode = StrUrlDecode & Mid( String, LngPos, 1 )
		  End If
	  Next
	
	  UrlDecode = StrUrlDecode
		
	End Function

// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Encode Url
// ------------------------------------------------------------------------------------------------------------------------------------------------------

  Public Function UrlEncode( String )
	
	  StrEncoded = Server.UrlEncode( String )
		UrlEncode  = StrEncoded
	
	End Function

// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Random Code
// ------------------------------------------------------------------------------------------------------------------------------------------------------

  Function RandomCode( Length )
	  
		NewRandomCode = Sha1( Timer() & Rnd() )
		NewRandomCode = Left( NewRandomCode, Length )
		Session( "rcode" ) = NewRandomCode
		Response.Write NewRandomCode
		 
	End Function

// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Calculate Age
// ------------------------------------------------------------------------------------------------------------------------------------------------------

  Function CalculateAge( Input )
	  
		TodaysDate = Date()
		IntAge     = DateDiff( "yyyy", Input, TodaysDate )
		
		If TodaysDate < DateSerial( Year( TodaysDate ), Month( Input ), Day( Input )) Then
		  IntAge = IntAge - 1
		End If
		
		CalculateAge = IntAge
		
	End Function
  

// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Calculate Days Passed
// ------------------------------------------------------------------------------------------------------------------------------------------------------

  Function CalcDaysPassed( Input )
	
	  InputDate  = Input
		TodaysDate = Date
		
		MonthDiff  = DateDiff( "m", InputDate, TodaysDate )
		DayDiff    = DateDiff( "d", InputDate, TodaysDate )
		YearDiff   = DateDiff( "yyyy", InputDate, TodaysDate )
		
		CalcDaysPassed = DayDiff
		
		If CalcDaysPassed = 0 Then
		  CalcDaysPassed = "Uploaded Today"
		ElseIf CalcDaysPassed = 1 Then
		  CalcDaysPassed = "Uploaded " & CalcDaysPassed & " day ago"
		ElseIf CalcDaysPassed > 30 < 32 Then
		  CalcDaysPassed = "Uploaded " & CalcDaysPassed & " days ago"
		Else 
		  CalcDaysPassed = CalcDaysPassed & " days ago"
		End If
	
	End Function

// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Fix Single Quotes for SQL
// ------------------------------------------------------------------------------------------------------------------------------------------------------

  Function FixSingleQuotes( Input )
	  
		FixSingleQuotes = Replace( Input, "'", "''" )
	
	End Function
	
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Calculate Vat
// ------------------------------------------------------------------------------------------------------------------------------------------------------

    Function CalculateVat( VatCode, CartValue )
		  
			CalcVat = FormatNumber( CartValue / 100 * VatCode, 2 )
			
		End Function

// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Append Email Diagnostics
// ------------------------------------------------------------------------------------------------------------------------------------------------------
      
			MxMessageId  = Sha1( Timer() & Rnd() )
			
			MxAppendText = Chr(13) & Chr(13) & "-----------------------------------------------------------------------------------------------------------" & Chr(13) & _
			                                   "Server Protocol   : " & Request.ServerVariables( "SERVER_PROTOCOL" ) & Chr(13) & _
																				 "Remote IP Address : " & Request.ServerVariables( "REMOTE_ADDR" )     & Chr(13) & _
																				 "MailServer        : " & MxServer & Chr(13) & _
																				 "TimeStamp         : " & Now & Chr(13) & _
																				 "Message ID        : " & MxMessageId & Chr(13) & _
																				 "Component         : " & MxSelectedComponent & Chr(13) & _
																				 "-----------------------------------------------------------------------------------------------------------" & Chr(13)
		
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Circuit Error
// ------------------------------------------------------------------------------------------------------------------------------------------------------

    Sub CircuitError()
		
		  fw_FileName    = LCase( fw_FullPath )
			fw_ServerName  = Request.ServerVariables( "SERVER_NAME" )
			fw_ServerPort  = Request.ServerVariables( "SERVER_PORT" )
			fw_FilePathTmp = fw_FullPath
			fw_PathExt     = "." & fw_AppLang
			fw_FilePathTmp = Replace( fw_FilePathTmp, fw_PathExt, "" )
			
			If fw_File = "" Then
			  fw_File  = "Null"
			End If
			
			fw_VersionTag = "Fusebox Framework Version: " & fw_Version & " at " & fw_ServerName & " on Port: " & fw_ServerPort
			
			WriteError = "<link href='" & fw_ErrorPath & "style.css?v=" & Sha1( Timer() & Rnd() ) & "' rel='stylesheet' type='text/css'/>" & _
			             "<div class='fw_error_header'></div>" & _
									 "<div class='fw_error_box'>" & _
									 "<span class='fw_error_bigtext'><b>The requested circuit `<span class='fw_error_redtext'>" & fw_File & "." & fw_Folder & "</span>` could not be loaded.</b><br/>Some URLs on this site are case sensitive. Please make sure you have spelled the URL correctly or go back to the <a href='/'>index page</a> and find a relevant link.</span>" & _
									 "<span class='fw_error_bigtext'><a href='/'>Click here to go to the index page</a></span>" & Chr(13) & _
									 "<span class='fw_error_midtext'>" & fw_VersionTag & "<br/>" & Chr(13) & _
									 "EndPath: " & fw_FilePathTmp & "</span>" & Chr(13) & _
									 "</div>"

				           Response.Write WriteError
		
		End Sub
		
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Get current week
// ------------------------------------------------------------------------------------------------------------------------------------------------------

   Function GetCurrentWeek( DayValue )
	 
	   CurrentYear     = Year(Now)
		 CurrentMonth    = Month(Now)
		 SelectedDay     = Int( DayValue ) 
		 CurrentDate     = Day(Now) & "/" & Month(Now) & "/" & Year(Now)
		 FirstOfTheMonth = DateSerial( CurrentYear, CurrentMonth, 1 )
		 LastOfTheMonth  = DateSerial( CurrentYear, CurrentMonth + 1, 0 )
		 
		 Dt = FirstOfTheMonth
		 
		 Do Until WeekDay( Dt ) = SelectedDay
		   Dt = Dt + 1
		 Loop
		 
		 Wk     = 1
		 SelDay = 0
		 
		 Do Until Dt > LastOfTheMonth
		   Dt = Dt + 7
			 Wk = Wk + 1
			 SelDay = SelDay + 1
		 Loop
		 
		 Wk = Wk
		 
		 If Wk > "5" Then
		   Wk = Wk - 1
		 End If
		 
		 GetCurrentWeek = SelDay
	 
	 End Function
		
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Convert minutes into hours
// ------------------------------------------------------------------------------------------------------------------------------------------------------

    Function ConvertToHours( minutes )
		  
			TimeMinutes    = Minutes
			TimeHour       = Int( TimeMinutes / 60 )
			TimeMin        = TimeMinutes MOD 60
			TimeString     = TimeHour & ":" & Right( "0" & TimeMin, 2 )
			
			ConvertToHours = TimeString
			
		End Function
		
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Calculate show duration
// ------------------------------------------------------------------------------------------------------------------------------------------------------

    Function GetShowDuration( StartTime, EndTime )
		
		  TmpMins           = DateDiff( "n", StartTime, EndTime )
			TmpTotalHrs       = TmpMins / 60
			TmpTotalMins      = TmpMins Mod 60
			GetShowDuration   = Fix( TmpTotalHrs ) & "." & CInt( TmpTotalMins )
		
		End Function

// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Fix Image Titles
// ------------------------------------------------------------------------------------------------------------------------------------------------------
   
	 Function FixImageTitle( String )
	 
	   FixTitleSQL = "SELECT * FROM images WHERE imageid='" & String & "'"
		 Call FetchData( FixTitleSQL, FixTitle, ConnTemp )
	 
	   FixImageTitle = FixTitle("imagetext")
		 FixImageTitle = Replace(FixImageTitle, " ", "-" )
		 FixImageTitle = Replace(FixImageTitle, "?", "" )
		 FixImageTitle = Replace(FixImageTitle, ".", "" )
		 FixImageTitle = Replace(FixImageTitle, ",", "" )
		 FixImageTitle = Replace(FixImageTitle, "'", "`" )
		 FixImageTitle = Replace(FixImageTitle, "`", "" )
		 FixImageTitle = Replace(FixImageTitle, "/", "-" )
		 FixImageTitle = Replace(FixImageTitle, ">", "" )
		 FixImageTitle = Replace(FixImageTitle, "...", "" )
		 
		 FixImageTitle = FixImageTitle
	 
	 End Function
	 
// ------------------------------------------------------------------------------------------------------------------------------------------------------	 
	 
	 Function FixProfileName( String )
	 
	   FixTitleSQL = "SELECT * FROM profiles WHERE profileid='" & String & "'"
		 Call FetchData( FixTitleSQL, FixTitle, ConnTemp )
	 
	   FixProfileName = FixTitle("profilename")
		 FixProfileName = Replace(FixProfileName, " ", "-" )
		 FixProfileName = Replace(FixProfileName, "?", "" )
		 FixProfileName = Replace(FixProfileName, ".", "" )
		 FixProfileName = Replace(FixProfileName, ",", "" )
		 FixProfileName = Replace(FixProfileName, "'", "`" )
		 FixProfileName = Replace(FixProfileName, "`", "" )
		 FixProfileName = Replace(FixProfileName, "/", "-" )
		 FixProfileName = Replace(FixProfileName, ">", "" )
		 FixProfileName = Replace(FixProfileName, "...", "" )
		 
		 FixProfileName = FixProfileName
	 
	 End Function
	
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Count Current Pages in recordset
// ------------------------------------------------------------------------------------------------------------------------------------------------------

	Function CountPages(argValue)
    if not (int(argValue) = argValue) then argValue = int(argValue)+1        
    CountPages = argValue
  End Function
	
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Do Curl Post
// ------------------------------------------------------------------------------------------------------------------------------------------------------

	
	
	Function CurlPost( Url, Method, PostData )
	
	  Set xml   = Server.CreateObject("Microsoft.XMLHTTP")
		  xml.Open Method, Url, False
	    xml.Send PostData
	
	    CurlPost = xml.ResponseText
		
		Set xml  = Nothing
	
	End Function
	
	
	Sub OpenGraph( Url, Method, PostData )
	
	  Set xml   = Server.CreateObject("Microsoft.XMLHTTP")
		  xml.Open Method, Url, False
	    xml.Send PostData
		
		Set xml  = Nothing
	
	End Sub
	
// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Format Date and Time
// ------------------------------------------------------------------------------------------------------------------------------------------------------

  Function exFormatDate(strDate, DateTemplate)
  
	  If not IsDate(strDate) Then
      exFormatDate = strDate
      Exit Function
    End If
	
    DateTemplate = replace(DateTemplate,"%mmmm",MonthName(DatePart("m",strDate),False),1,-1,0)
    DateTemplate = replace(DateTemplate,"%mmm",MonthName(DatePart("m",strDate),True),1,-1,0)
    DateTemplate = replace(DateTemplate,"%mm",right("0" & DatePart("m",strDate),2),1,-1,0)
    DateTemplate = replace(DateTemplate,"%m",DatePart("m",strDate),1,-1,0)
    DateTemplate = replace(DateTemplate,"%dddd",WeekDayName(DatePart("w",strDate,1),False),1,-1,0)
    DateTemplate = replace(DateTemplate,"%ddd",WeekDayName(DatePart("w",strDate,1),True),1,-1,0)
    DateTemplate = replace(DateTemplate,"%dd",right("0" & DatePart("d",strDate),2),1,-1,0)
    DateTemplate = replace(DateTemplate,"%d",DatePart("d",strDate),1,-1,0)
    'DateTemplate = replace(DateTemplate,"%o",intToOrdinal(DatePart("d",strDate)),1,-1,0)
    DateTemplate = replace(DateTemplate,"%yyyy",DatePart("yyyy",strDate),1,-1,0)
    DateTemplate = replace(DateTemplate,"%yy",right(DatePart("yyyy",strDate),2),1,-1,0)
    DateTemplate = replace(DateTemplate,"%y",cInt(right(DatePart("yyyy",strDate),2)),1,-1,0)
    exFormatDate = DateTemplate
  
	End Function 

// ------------------------------------------------------------------------------------------------------------------------------------------------------
// ' Clicksor Ad Code
// ------------------------------------------------------------------------------------------------------------------------------------------------------

  Public Function AdCode( AdType )
     AdCode = "<div class='smalladbanner'><script type='text/javascript'>" & Chr(13) & _
              "//default banner house ad url" & Chr(13) & _
              "clicksor_default_url = '';"  & Chr(13) & _
              "clicksor_banner_border = ''; clicksor_banner_ad_bg = '';" & Chr(13) & _
              "clicksor_banner_link_color = ''; clicksor_banner_text_color = '';"  & Chr(13) & _
              "clicksor_banner_text_banner = false; clicksor_banner_image_banner = true;"  & Chr(13) & _
              "clicksor_layer_border_color = '';"  & Chr(13) & _
              "clicksor_layer_ad_bg = ''; clicksor_layer_ad_link_color = '';"  & Chr(13) & _
              "clicksor_layer_ad_text_color = ''; clicksor_text_link_bg = '';"  & Chr(13) & _
              "clicksor_text_link_color = ''; clicksor_enable_text_link = false;"  & Chr(13) & _
              "clicksor_layer_banner = false;"  & Chr(13) & _
              "</script>"  & Chr(13) & _
              "<script type=""text/javascript"" src=""http://ads.clicksor.com/newServing/showAd.php?nid=1&amp;pid=279496&amp;adtype=" & AdType & "&amp;sid=454359""></script></div>"  & Chr(13) & _
              "<noscript><a href=""http://www.yesadvertising.com"">affiliate marketing</a></noscript>"
				 
	End Function

	
  Public Function BoxAdCode( AdType, frameid )
	
	'BoxAdCode = "<script type='text/javascript' src='/application/library/javascript/adverts.js'></script>"
   BoxAdCode = "<div class='horad120'><script type='text/javascript'>" & Chr(13) & _
              "//default banner house ad url" & Chr(13) & _
              "clicksor_default_url = '';"  & Chr(13) & _
              "clicksor_banner_border = '#dddddd'; clicksor_banner_ad_bg = '#dddddd';" & Chr(13) & _
              "clicksor_banner_link_color = ''; clicksor_banner_text_color = '';"  & Chr(13) & _
              "clicksor_banner_text_banner = false; clicksor_banner_image_banner = true;"  & Chr(13) & _
              "clicksor_layer_border_color = '';"  & Chr(13) & _
              "clicksor_layer_ad_bg = ''; clicksor_layer_ad_link_color = '';"  & Chr(13) & _
              "clicksor_layer_ad_text_color = ''; clicksor_text_link_bg = '';"  & Chr(13) & _
              "clicksor_text_link_color = ''; clicksor_enable_text_link = false;"  & Chr(13) & _
              "clicksor_layer_banner = false;"  & Chr(13) & _
              "</script>"  & Chr(13) & _
              "<script type=""text/javascript"" src=""http://ads.clicksor.com/newServing/showAd.php?nid=1&amp;pid=279496&amp;adtype=" & AdType & "&amp;sid=454359""></script></div>"
	 
				 
	End Function
	
// ------------------------------------------------------------------------------------------------------------------------------------------------------
%>